package com.ecommerce.store.controller;


import com.ecommerce.store.common.ApiResponse;
import com.ecommerce.store.model.Category;
import com.ecommerce.store.service.CategoryService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Objects;

@RestController
@RequestMapping("/category")
public class CategoryController {

    // This section wires the controller to the services
    @Autowired
    CategoryService categoryService;

    // We are creating a category section in the database with this request method
    @PostMapping("/create")
    public ResponseEntity<ApiResponse> createCategory(@RequestBody Category category){
        if (Objects.nonNull(categoryService.readCategory(category.getCategoryName()))) {
            return new ResponseEntity<ApiResponse>(new ApiResponse(false, "category already exists"), HttpStatus.CONFLICT);
        }

        categoryService.createCategory(category);
        return new ResponseEntity<>(new ApiResponse(  true, "created a new category" ), HttpStatus.CREATED);
    }

    //This method is used to fetch our newly created category
    @GetMapping("/list")
    public List<Category> listCreateCategory(){

       return categoryService.listCategory();
    }
    // This method is used to update our new created category by using the autogenerated categoryId
    @PostMapping("/update/{categoryId}")
    public ResponseEntity<ApiResponse>  updateCategory(@PathVariable("categoryId") int categoryId, @RequestBody Category category) {
        System.out.println("category Id " + categoryId);
        if(!categoryService.findById(categoryId)){
            return new ResponseEntity<ApiResponse>(new ApiResponse(false, "category does not exist"), HttpStatus.NOT_FOUND);
        }
        categoryService.editCategory(categoryId, category);
        return new ResponseEntity<>(new ApiResponse(true,"category has been updated"), HttpStatus.OK);
    }

}
